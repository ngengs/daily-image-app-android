name: Build App

on:
  workflow_call:
    inputs:
      signed-build:
        description: "Perform Signed Build"
        required: false
        default: false
        type: boolean
      env-file-path:
        description: ".env file location"
        required: false
        default: ./.github/variables/default_github_action.env
        type: string

    secrets:
      SECRET_PROPERTIES_CONFIG:
        description: "secret.properties hash"
        required: true
      SIGNING_KEY:
        description: "Signing Key for create signed build"
        required: false
      SIGNING_KEY_ALIAS:
        description: "Signing Key Alias for create signed build"
        required: false
      SIGNING_KEY_STORE_PASSWORD:
        description: "Signing Key Store Password for create signed build"
        required: false
      SIGNING_KEY_PASSWORD:
        description: "Signing Key Password for create signed build"
        required: false

jobs:
  build:
    name: Build
    if: ${{ inputs.signed-build != true }}
    runs-on: ubuntu-latest

    steps:
      - name: Clone repo
        id: clone-repo
        uses: actions/checkout@v3

      - name: Extract Env
        uses: ./.github/actions/using-env-variables
        with:
          env-file-path: ${{ inputs.env-file-path }}

      - name: Configuration
        uses: ./.github/actions/config-build-app
        with:
          secrets-properties-config: ${{ secrets.SECRET_PROPERTIES_CONFIG }}
          java-version: ${{ env.JAVA_VERSION }}
          gradle-version: ${{ env.GRADLE_VERSION }}

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Dependency Review
        if: ${{ github.event_name == 'pull_request' || github.event_name == 'pull_request_target' }}
        uses: actions/dependency-review-action@v3

      - name: Build App
        uses: gradle/gradle-build-action@v2
        with:
          arguments: assemble
          gradle-version: ${{ env.GRADLE_VERSION }}

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          path: app/build/outputs/apk/debug/app-debug.apk

      - name: Cleanup
        run: rm -rf secrets.properties

  build-release:
    name: Build Release
    if: ${{ inputs.signed-build == true }}
    runs-on: ubuntu-latest

    steps:
      - name: Clone repo
        id: clone-repo
        uses: actions/checkout@v3

      - name: Extract Env
        uses: ./.github/actions/using-env-variables
        with:
          env-file-path: ${{ inputs.env-file-path }}

      - name: Get tag name
        id: version-tag
        uses: ./.github/actions/extract-tag-version

      - name: Configuration
        uses: ./.github/actions/config-build-app
        with:
          secrets-properties-config: ${{ secrets.SECRET_PROPERTIES_CONFIG }}
          java-version: ${{ env.JAVA_VERSION }}
          gradle-version: ${{ env.GRADLE_VERSION }}

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Build App
        uses: gradle/gradle-build-action@v2
        with:
          arguments: assembleRelease
          gradle-version: ${{ env.GRADLE_VERSION }}
        env:
          CUSTOM_APP_VERSION_NAME: ${{ steps.version-tag.outputs.clean-version }}

      - name: Build Sign APK
        id: sign_app
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.SIGNING_KEY_ALIAS }}
          keyStorePassword: ${{ secrets.SIGNING_KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.SIGNING_KEY_PASSWORD }}
        env:
          BUILD_TOOLS_VERSION: "33.0.1"

      - name: Change artifact name
        run: |
          echo ${{ steps.sign_app.outputs.signedReleaseFile }}
          mkdir -p outputs/apk/release
          cp ${{ steps.sign_app.outputs.signedReleaseFile }} outputs/apk/release/app-daily-image-${{ steps.version-tag.outputs.clean-version }}.apk 

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: signed-app-artifact
          path: outputs/apk/release/app-daily-image-${{ steps.version-tag.outputs.clean-version }}.apk

      - name: Cleanup
        run: rm -rf secrets.properties