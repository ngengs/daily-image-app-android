name: Coverage

on:
  workflow_call:
    inputs:
      env-file-path:
        description: ".env file location"
        required: false
        default: ./.github/variables/default_github_action.env
        type: string
      report-pr:
        description: "Report to PR"
        required: false
        default: false
        type: boolean
      create-badge:
        description: "Report as badge"
        required: false
        default: false
        type: boolean

    secrets:
      SECRET_PROPERTIES_CONFIG:
        description: "secret.properties hash"
        required: true

jobs:
  coverage:
    name: Coverage
    needs: [ unit-test, instrument-test ]
    runs-on: ubuntu-latest

    steps:
      - name: Clone repo
        id: clone-repo
        uses: actions/checkout@v3

      - name: Extract Env
        uses: ./.github/actions/using-env-variables
        with:
          env-file-path: ${{ inputs.env-file-path }}

      - name: Configuration
        uses: ./.github/actions/config-build-app
        with:
          secrets-properties-config: ${{ secrets.SECRET_PROPERTIES_CONFIG }}
          java-version: ${{ env.JAVA_VERSION }}
          gradle-version: ${{ env.GRADLE_VERSION }}

      - name: Download unit test java build artifact
        uses: actions/download-artifact@v3
        with:
          name: unit-test-java-class-build
          path: app/build/intermediates/javac/

      - name: Download unit test kotlin build artifact
        uses: actions/download-artifact@v3
        with:
          name: unit-test-kotlin-class-build
          path: app/build/tmp/kotlin-classes/

      - name: Download unit test result artifact
        uses: actions/download-artifact@v3
        with:
          name: unit-test-result
          path: app/build/outputs/unit_test_code_coverage/

      - name: Download instrument test result artifact
        uses: actions/download-artifact@v3
        with:
          name: instrument-test-result-31
          path: app/build/outputs/code_coverage/debugAndroidTest/

      - name: Check coverage
        uses: gradle/gradle-build-action@v2
        with:
          arguments: testDebugUnitTest
          gradle-version: ${{ env.GRADLE_VERSION }}

      - name: Upload coverage result
        uses: actions/upload-artifact@v3
        with:
          name: coverage-result
          path: app/build/reports/jacoco/jacocoDebugReport/

  coverage-report:
    name: Coverage Report
    needs: [ coverage ]
    if: inputs.report-pr == true
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write

    steps:
      - name: Clone repo
        id: clone-repo
        uses: actions/checkout@v3

      - name: Download coverage result
        uses: actions/download-artifact@v3
        with:
          name: coverage-result
          path: app/build/reports/jacoco/jacocoDebugReport/

      - name: Add coverage to PR
        id: jacoco-report
        uses: madrapps/jacoco-report@v1.3
        with:
          paths: ${{ github.workspace }}/app/build/reports/jacoco/jacocoDebugReport/jacocoDebugReport.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          min-coverage-overall: 80
          min-coverage-changed-files: 80
          title: "Coverage report"
          update-comment: true

      - name: Check coverage threshold
        id: jacoco-threshold
        run: |
          COVERAGE_OVERALL=${{ steps.jacoco-report.outputs.coverage-overall }} 
          COVERAGE_FILE_CHANGED=${{ steps.jacoco-report.outputs.coverage-changed-files }}
          if [[ $COVERAGE_OVERALL < 80 || $COVERAGE_FILE_CHANGED < 80 ]]; then 
            if [[ $COVERAGE_OVERALL < 80 ]]; then echo "::error::Overall Coverage Below Threshold"; fi
            if [[ $COVERAGE_FILE_CHANGED < 80 ]]; then echo "::error::Changed File Coverage Below Threshold";  fi
            exit 1; 
          fi

  coverage-badge:
    name: Coverage Badge
    needs: [ coverage ]
    if: inputs.create-badge == true
    runs-on: ubuntu-latest

    steps:
      - name: Clone repo
        id: clone-repo
        uses: actions/checkout@v3

      - name: Checkout badges branch to a badges directory nested inside first checkout
        uses: actions/checkout@v3
        with:
          ref: badges
          path: badges

      - name: Download coverage result
        uses: actions/download-artifact@v3
        with:
          name: coverage-result
          path: app/build/reports/jacoco/jacocoDebugReport/

      - name: Create coverage badge
        id: jacoco-badge
        uses: cicirello/jacoco-badge-generator@v2
        with:
          badges-directory: badges
          generate-branches-badge: true
          generate-summary: true
          jacoco-csv-file: ${{ github.workspace }}/app/build/reports/jacoco/jacocoDebugReport/jacocoDebugReport.xml
          coverage-badge-filename: develop-jacoco.svg
          summary-filename: develop-coverage-summary.json
          intervals: 90 80 70 60 50 0

