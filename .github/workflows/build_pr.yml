name: Build and Test
on:
  pull_request:
    paths-ignore:
      - '**.md'
    branches:
      - 'develop'
      - 'ci/*'
  push:
    paths-ignore:
      - '**.md'
    branches:
      - 'develop'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number }}
  cancel-in-progress: true

env:
  JAVA_VERSION: 11
  GRADLE_VERSION: 7.4

permissions:
  contents: read

jobs:
  kt-lint:
    name: Kotlin Code style
    runs-on: ubuntu-latest

    steps:
      - name: Clone repo
        id: clone-repo
        uses: actions/checkout@v3

      - name: Configuration
        uses: ./.github/actions/config-build-app
        with:
          secrets-properties-config: ${{ secrets.CONFIG_SECRETS_PROPERTIES }}
          java-version: ${{ env.JAVA_VERSION }}
          gradle-version: ${{ env.GRADLE_VERSION }}

      - name: Check code style
        run: ./gradlew ktlintGenerateBaseline

      - name: Report code style
        uses: ScaCap/action-ktlint@1.5.1
        if: success() || failure()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          android: true
          baseline: app/build/reports/ktlint/config/baseline.xml
          reporter: github-check
          fail_on_error: true

  unit-test:
    name: Unit Testing
    runs-on: ubuntu-latest

    steps:
      - name: Clone repo
        id: clone-repo
        uses: actions/checkout@v3

      - name: Configuration
        uses: ./.github/actions/config-build-app
        with:
          secrets-properties-config: ${{ secrets.CONFIG_SECRETS_PROPERTIES }}
          java-version: ${{ env.JAVA_VERSION }}
          gradle-version: ${{ env.GRADLE_VERSION }}

      - name: Run tests
        run: ./gradlew testDebugUnitTest

      - name: Upload test java build
        uses: actions/upload-artifact@v3
        with:
          name: unit-test-java-class-build
          path: app/build/intermediates/javac/
          retention-days: 2

      - name: Upload test kotlin build
        uses: actions/upload-artifact@v3
        with:
          name: unit-test-kotlin-class-build
          path: app/build/tmp/kotlin-classes/
          retention-days: 2

      - name: Upload test result
        uses: actions/upload-artifact@v3
        with:
          name: unit-test-result
          path: app/build/outputs/unit_test_code_coverage/
          retention-days: 2

      - name: Cleanup
        run: rm -rf secrets.properties

  instrument-test:
    name: Instrument Testing
    runs-on: macos-latest

    strategy:
      matrix:
        emulator-api-level: [ 29, 31 ]
        include:
          - emulator-api-level: 29
            emulator-arch: x86
          - emulator-api-level: 31
            emulator-arch: x86_64

    steps:
      - name: Clone repo
        id: clone-repo
        uses: actions/checkout@v3

      - name: Configuration
        uses: ./.github/actions/config-build-app
        with:
          secrets-properties-config: ${{ secrets.CONFIG_SECRETS_PROPERTIES }}
          java-version: ${{ env.JAVA_VERSION }}
          gradle-version: ${{ env.GRADLE_VERSION }}

      - name: AVD cache
        uses: actions/cache@v3
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.emulator-api-level }}-${{ matrix.emulator-arch }}

      - name: Create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.emulator-api-level }}
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          profile: pixel_4a
          arch: ${{ matrix.emulator-arch }}
          script: echo "Generated AVD snapshot for caching."

      - name: Run tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.emulator-api-level }}
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          profile: pixel_4a
          arch: ${{ matrix.emulator-arch }}
          script: ./gradlew connectedDebugAndroidTest

      - name: Upload test result
        uses: actions/upload-artifact@v3
        with:
          name: instrument-test-result-${{ matrix.emulator-api-level }}
          path: app/build/outputs/code_coverage/debugAndroidTest/
          retention-days: 2

      - name: Cleanup
        run: rm -rf secrets.properties

  coverage:
    name: Coverage
    needs: [unit-test, instrument-test]
    runs-on: ubuntu-latest

    steps:
      - name: Clone repo
        id: clone-repo
        uses: actions/checkout@v3

      - name: Configuration
        uses: ./.github/actions/config-build-app
        with:
          secrets-properties-config: ${{ secrets.CONFIG_SECRETS_PROPERTIES }}
          java-version: ${{ env.JAVA_VERSION }}
          gradle-version: ${{ env.GRADLE_VERSION }}

      - name: Download unit test java build artifact
        uses: actions/download-artifact@v3
        with:
          name: unit-test-java-class-build
          path: app/build/intermediates/javac/

      - name: Download unit test kotlin build artifact
        uses: actions/download-artifact@v3
        with:
          name: unit-test-kotlin-class-build
          path: app/build/tmp/kotlin-classes/

      - name: Download unit test result artifact
        uses: actions/download-artifact@v3
        with:
          name: unit-test-result
          path: app/build/outputs/unit_test_code_coverage/

      - name: Download instrument test result artifact
        uses: actions/download-artifact@v3
        with:
          name: instrument-test-result-31
          path: app/build/outputs/code_coverage/debugAndroidTest/

      - name: Check coverage
        run: ./gradlew jacocoDebugReport

      - name: Upload coverage result
        uses: actions/upload-artifact@v3
        with:
          name: coverage-result
          path: app/build/reports/jacoco/jacocoDebugReport/

      - name: Clear test artifact
        uses: geekyeggo/delete-artifact@v2
        with:
          name: |
            instrument-test-result-*
            unit-test-result
            unit-test-kotlin-class-build
            unit-test-java-class-build
          failOnError: false

  build:
    name: Build
    needs: [kt-lint, coverage]
    runs-on: ubuntu-latest

    steps:
      - name: Clone repo
        id: clone-repo
        uses: actions/checkout@v3

      - name: Configuration
        uses: ./.github/actions/config-build-app
        with:
          secrets-properties-config: ${{ secrets.CONFIG_SECRETS_PROPERTIES }}
          java-version: ${{ env.JAVA_VERSION }}
          gradle-version: ${{ env.GRADLE_VERSION }}

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Dependency Review
        uses: actions/dependency-review-action@v3
      - name: Build App
        run: ./gradlew assemble

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          path: app/build/outputs/apk/debug/app-debug.apk

      - name: Cleanup
        run: rm -rf secrets.properties

  coverage-report:
    name: Coverage Report
    needs: [coverage]
    runs-on: ubuntu-latest
    permissions:
      checks: write

      - name: Download coverage result
        uses: actions/download-artifact@v3
        with:
          name: coverage-result

      - name: Report coverage to workflow
          id: jacoco_reporter
          uses: PavanMudigonda/jacoco-reporter@v4.8
          with:
            coverage_results_path: jacocoDebugReport.xml
            coverage_report_name: Coverage
            coverage_report_title: Jacoco Coverage Report
            github_token: ${{ secrets.GITHUB_TOKEN }}
            skip_check_run: false
            minimum_coverage: 80
            fail_below_threshold: true
            publish_only_summary: false

