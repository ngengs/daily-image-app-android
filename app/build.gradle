plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'com.google.dagger.hilt.android'
    id 'androidx.navigation.safeargs.kotlin'
    id 'org.jlleitschuh.gradle.ktlint' version "$ktLintVersion"
    id 'jacoco'
}

apply from: "${rootProject.rootDir}/common_gradle/versioning.gradle"
apply from: "${rootProject.rootDir}/common_gradle/jacoco.gradle"

android {
    namespace 'com.ngengs.android.app.dailyimage'
    compileSdk appCompileSdkVersion
    buildToolsVersion appBuildToolsVersion

    defaultConfig {
        applicationId "com.ngengs.android.app.dailyimage"
        minSdk appMinSdkVersion
        targetSdk appTargetSdkVersion
        versionCode appVersionCode
        versionName appVersionName
        vectorDrawables.useSupportLibrary = true

        testInstrumentationRunner "com.ngengs.android.app.dailyimage.AppWithHiltTestRunner"
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguardTest-rules.pro'
        }

        debug {
            minifyEnabled false
            shrinkResources false
            testCoverageEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguardTest-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11.toString()
    }

    buildFeatures {
        viewBinding true
    }

    testOptions {
        animationsDisabled true

        unitTests {
            includeAndroidResources = true
        }
    }

    packagingOptions {
        pickFirst 'META-INF/LICENSE.md'
        pickFirst 'META-INF/LICENSE-notice.md'
    }
}

kapt {
    correctErrorTypes = true
}

secrets {
    propertiesFileName = "secrets.properties"
}

ktlint {
    android = true
    disabledRules = ["final-newline", "import-ordering"]
}

dependencies {
    implementation "androidx.appcompat:appcompat:$appCompatVersion"
    implementation "androidx.browser:browser:$browserVersion"
    implementation "androidx.core:core-ktx:$androidCoreVersion"
    implementation "androidx.core:core-splashscreen:$splashScreenVersion"
    implementation "androidx.constraintlayout:constraintlayout:$contraintLayoutVersion"
    implementation "androidx.fragment:fragment-ktx:$fragmentVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycleVersion"
    implementation "androidx.recyclerview:recyclerview:$recyclerViewVersion"
    implementation "com.google.android.material:material:$materialVersion"

    // Navigation Component
    implementation "androidx.navigation:navigation-fragment-ktx:$navVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navVersion"

    // Moshi
    implementation "com.squareup.moshi:moshi-kotlin:$moshiVersion"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshiVersion"

    // Retrofit
    implementation "com.squareup.okhttp3:okhttp:$okhttpVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttpVersion"
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofitVersion"

    // Hilt
    implementation "com.google.dagger:hilt-android:$hiltVersion"
    kapt "com.google.dagger:hilt-compiler:$hiltVersion"

    // Timber
    implementation "com.jakewharton.timber:timber:$timberVersion"

    // Room
    implementation "androidx.room:room-runtime:$roomVersion"
    implementation "androidx.room:room-ktx:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"

    // Glide
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    implementation "com.github.bumptech.glide:okhttp3-integration:$glideVersion"
    kapt "com.github.bumptech.glide:annotations:$glideVersion"
    kapt "com.github.bumptech.glide:compiler:$glideVersion"

    // Pinch To Zoom
    implementation "com.github.chrisbanes:PhotoView:$photoViewVersion"

    // Test
    testImplementation project(path: ":libs:lib_test_utils")
    testImplementation "junit:junit:$junitVersion"
    testImplementation "androidx.arch.core:core-testing:$coreTestingVersion"
    testImplementation "androidx.test.ext:junit-ktx:$androidJunitVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$ktCoroutineTestVersion"
    testImplementation "org.robolectric:robolectric:$robolectricVersion"
    testImplementation "com.squareup.okhttp3:mockwebserver:$okhttpVersion"
    testImplementation "io.mockk:mockk:$mockkVersion"
    testImplementation "io.mockk:mockk-android:$mockkVersion"
    testImplementation "io.mockk:mockk-agent:$mockkVersion"
    testImplementation "com.google.dagger:hilt-android-testing:$hiltVersion"
    testImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    testImplementation "androidx.navigation:navigation-testing:$navVersion"
    testImplementation "com.google.truth:truth:$truthVersion"
    testImplementation "app.cash.turbine:turbine:$turbineVersion"
    kaptTest "com.google.dagger:hilt-android-compiler:$hiltVersion"

    // Instrument Test
    androidTestImplementation project(path: ":libs:lib_test_utils")
    androidTestImplementation "androidx.test.ext:junit:$androidJunitVersion"
    androidTestImplementation "androidx.arch.core:core-testing:$coreTestingVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espressoVersion"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$ktCoroutineTestVersion"
    androidTestImplementation "androidx.navigation:navigation-testing:$navVersion"
    androidTestImplementation "io.mockk:mockk-android:$mockkVersion"
    androidTestImplementation "io.mockk:mockk-agent:$mockkVersion"
    androidTestImplementation "com.google.dagger:hilt-android-testing:$hiltVersion"
    androidTestImplementation "com.google.truth:truth:$truthVersion"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$hiltVersion"

    debugImplementation "androidx.fragment:fragment-testing:$fragmentVersion"
    implementation "androidx.test:core:1.5.0"
}